{
    "login_h": "Login",
    "welcome_p": "Text privately with your friend running this app on his own server with full end to end encryption!",
    "deploy_link": "Deploy to your own instance",
    "username_label": "Username",
    "username_input_placeholder": "Enter your username",
    "password_label": "Password",
    "password_input_placeholder": "Enter your password",
    "dont_have_account": "Don't have an account yet?",
    "have_account": "Already have an account?",
    "login_button": "Login",
    "switch_to_login": "Login",
    "switch_to_sign_up": "Sign up",
    "password_mismatch": "Passwords do not match",
    "login_failed": "Invalid credentials",
    "signup_failed": "Sign up failed; The username might be already in use by someone else",
    "signup_h": "Sign Up",
    "confirm_password_label": "Confirm Password",
    "confirm_password_input_placeholder": "Confirm your password",
    "signup_information": "By creating an account you are generating on your device only in this browser on this page locally a private and public key for encrypting your data, the private one will never leave your device, our servers will never know what it is. This is mainly done because each time you will message anyone the message will be first encrypted by your private key that is only decryptable by your public key and then by the public key of the person you are sending the message to so only his private key that only he has can decrypt the message you sent him and so the public one of yours that he as your friend automatically has can decrypt the last part. Someone having only one of those 2 keys, for example only your public one, can never decrypt the message. But we are also using the pgp pub keys algorithms for authentication: We will save the public one in an encrypted way we can decrypt so we can always authenticate you. This will give you a 2-factor authentication without a use of a phone or an email. It will work in a way where your credentials will be always sent to our server encrypted with a private key so only the public one can decrypt them, your database user will also be created using SCRAM-SHA256 encryption, so as we will never store your credentials in any by us decryptable way you must remember your password and never loose your private key, so you are capable to sign in. As you sign up you will get logged into the Messenger app where you will also get a cancelable popup about key specifications that you can anytime get back up by clicking the key button. Now this seems horrendous, all the other apps let you forget all your passwords all the time, but you cannot forget your password and loose your private key, that is the only way you can have true security in the application you are using, this is the only way we cannot possibly have a backdoor into your account. The view of the keys will be hidden at first, you can display it clearly by clicking a button, but do it only when your monitor/screen is not being recorded in any way. You will also get to copy the keys without even displaying them in the page. The private key will get saved into your strict cookies for this page, if you have allowed it for the ease of logging in in the future, but even then you absolutely should save your private key in some secure password manager, ideally in more of them over backup devices, so you can be sure of not loosing a private key. Someone getting your private key is not such a big deal as it might seem, because with it alone one cannot really do anything to you. You with it alone cannot do or see anything. You have to have access to your data to decrypt the values with the private key, and you can get to those only via the authentication into the app for which u need not only the private key, but also your password. But even tho one cannot do anything with your private key alone, if you suspect that someone knows it you should as fast as possible, just to be safe, sign in and generate new keys, there will be a button for this that will also on your device decrypt all your data with your private key will generate the new keys, will encrypt them with the new public key, will burn the old private key from your cookies (if u have it there), will throw the new one there (if u let it there), will send a message to the server to burn the old public key and all values encrypted with it and will replace them with the newly encrypted values on your device with the new public key that will also be saved in the db encrypted in the same way as it was before. When you login in the default mode the process of logging in will continue only if a private key is in your cookies, if you have selected the no-cookies mode, you will have to input the private key, into the input on the page with the credentials for it to on your device only encrypt the name and password so it can be sent on to the server where it will be decrypted with the public key that is saved under your name. If that is successful, you will be authenticated. Now the only data decryptable by the server will be the from whom are which encrypted messages sent to whom: That is required for the server to be capable of sending the messages from one user to the other, but worry not, you already have the full anonymity of what are you sending to anyone and you can have the anonymity of to whom you are sending the encrypted messages/files/filenames by just choosing an alias nickname instead of any name which actually describes your real identity in any way.",
    "signup_button": "Sign Up",
    "signout_button": "Sign out",
    "more_options_toggle": "More options",
    "theme_toggle": "Theme toggle",
    "theme_toggle_light_dropdown_menu_item": "Light",
    "theme_toggle_dark_dropdown_menu_item": "Dark",
    "theme_toggle_system_dropdown_menu_item": "System",
    "lang_toggle": "Toggle language",
    "lang_toggle_english_dropdown_menu_item": "English",
    "lang_toggle_czech_dropdown_menu_item": "Czech"
}


